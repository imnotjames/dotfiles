#!/usr/bin/env bash

if [[ -r "/usr/share/git/git-prompt.sh" ]]; then
	source /usr/share/git/git-prompt.sh
elif [[ -r "/usr/local/etc/bash_completion.d/git-prompt.sh" ]]; then
	source /usr/local/etc/bash_completion.d/git-prompt.sh
fi

if [[ ${EUID} == 0 ]] ; then
	sq_color="\[\033[0;31m\]"
else		
	sq_color="\[\033[1;34m\]"
fi

text_color="\[\e[38;5;250m\]"
# time_color=`tput setaf 190`
user_color="\[\e[38;5;161m\]"
host_color="\[\e[38;5;208m\]"
path_color="\[\e[38;5;190m\]"
bad_command_color="\[\e[38;5;1m\]"
reset_color="\[\e[0m\]"

__PS1_SEPARATOR="\342\224\200"
__PS1_BAD_COMMAND="\$([[ \$? != 0 ]] && echo \"${__PS1_SEPARATOR}$sq_color[${bad_command_color}\342\234\227$sq_color]\")"
__PS1_TIME="${__PS1_SEPARATOR}$sq_color[$text_color$time_color\t$sq_color]"
__PS1_HOST="${__PS1_SEPARATOR}$sq_color[$text_color$user_color\u ${text_color}at $host_color\h$sq_color]"

if [ "$(type -t __git_ps1)" = function ]; then
	__PS1_GIT="\$(__git_ps1 \"${__PS1_SEPARATOR}$sq_color[$text_color%s$sq_color]\")"
fi
__PS2_SEPARATORS=$(for i in {1..6}; do  echo -n ${__PS1_SEPARATOR}; done)

if [[ -z "$WINDOW" ]]; then
	__PS1_SCREEN=""
else
	__PS1_SCREEN="${__PS1_SEPARATOR}$sq_color[$text_color${WINDOW}$sq_color]"
fi

__PS1_LINE_1="${__PS1_BAD_COMMAND}${__PS1_TIME}${__PS1_HOST}${__PS1_GIT}${__PS1_SCREEN}"
__PS1_LINE_2="${__PS1_SEPARATOR}> $text_color$path_color\W$sq_color $ $text_color>> "

export PS1="$sq_color\342\224\214${__PS1_LINE_1}\n\342\224\224${__PS1_SEPARATOR}${__PS1_LINE_2}$reset_color"
export PS2="$sq_color\342\224\224${__PS2_SEPARATORS}> $text_color.. $reset_color"

unset sq_color text_color time_color user_color host_color path_color bad_command_color reset_color
unset __PS2_SEPARATORS __PS1_SEPARATOR __PS1_BAD_COMMAND __PS1_TIME __PS1_HOST __PS1_GIT
unset __PS1_LINE_1 __PS1_LINE_2
