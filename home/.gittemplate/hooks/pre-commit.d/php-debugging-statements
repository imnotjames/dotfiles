#!/usr/bin/env bash

TEXT_DEFAULT="\\033[0;39m"
TEXT_INFO="\\033[1;32m"
TEXT_ERROR="\\033[1;31m"
TEXT_UNDERLINE="\\0033[4m"
TEXT_BOLD="\\0033[1m"

# Add or remove keywords here
KEYWORDS_REGEX="var_dump\(|die\(|Zend_Debug::|print_r\("
# Add extensions to check here
EXTENSIONS_REGEX="(.php$)"

ERROR_FOUND=false

FILES=$(git diff-index --cached --name-only --diff-filter=ACMR HEAD)

# Determine which version of sed to use BSD or GNU
TMP_FOO_FILE=$(mktemp /tmp/output.XXXXXXXXXX)
echo foo > $TMP_FOO_FILE
sed -r 's/o/o/' $TMP_FOO_FILE &>/dev/null
if test $? -ne 0 ; then
    sed -E 's/o/o/' $TMP_FOO_FILE &>/dev/null
    if test $? -eq 0 ; then
        SED_EXTENDED_CMD="sed -E"
    else
        echo -e "$TEXT_ERROR" "Unable to determine sed version" "$TEXT_DEFAULT"
    fi
else
    SED_EXTENDED_CMD="sed -r"
fi
rm -f $TMP_FOO_FILE

for FILE in $FILES; do 
     if [[ $FILE =~ $EXTENSIONS_REGEX ]]; then
        ERRORS=""
        while IFS=: read -ra RESULT; do
            if [ "$RESULT" != "" ]; then
                ERRORS="$ERRORS\nline $TEXT_BOLD${RESULT[1]}$TEXT_DEFAULT: "
                ERRORS="$ERRORS"$(sed -n ${RESULT[1]}p $FILE | $SED_EXTENDED_CMD "s/($KEYWORDS_REGEX)/\\$TEXT_UNDERLINE\1\\$TEXT_DEFAULT/g")

		ERROR_FOUND=true
            fi
        done < <(grep -sEnH $KEYWORDS_REGEX $FILE)
        if [ "$ERRORS" != "" ]; then
            echo -e "${TEXT_ERROR}Debugging statements found in $TEXT_BOLD$FILE$TEXT_DEFAULT$ERRORS"
            echo
        fi
     fi
done

if [ "$ERROR_FOUND" ]; then
    exit 1
else
    exit 0
fi


